{"version":3,"sources":["images/img1.png","images/home_svg.png","Common.jsx","Home.jsx","About.jsx","Card.jsx","Sdata.jsx","Service.jsx","Contact.jsx","Navbar.jsx","Footer.jsx","App.jsx","serviceWorker.js","index.js","images/img2.png"],"names":["module","exports","Common","props","id","className","name","to","visit","btnname","src","imgsrc","alt","Home","web","About","Card","title","Sdata","app","Service","map","val","ind","key","Contact","useState","fullname","phone","email","msg","data","setData","InputEvent","event","target","value","preVal","onSubmit","e","preventDefault","alert","htmlFor","type","onChange","placeholder","rows","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","Footer","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.42a550f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.1cdd215a.png\";","module.exports = __webpack_public_path__ + \"static/media/home_svg.1c76677c.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport web from \"./images/home_svg.png\"\r\nconst Common = (props) => {\r\n    return(\r\n        <>\r\n            <section id=\"header\" className=\"d-flex align-items-center\">\r\n\r\n            <div className=\"container-fluid nav_bg\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex justify-content-center flex-column\">\r\n                            <h1>{props.name}<strong className=\"brand-name\"> Suraj Tiwari</strong></h1>\r\n                            <h2 className=\"my-3\">\r\n                                We are the team of talented developer making websites\r\n                            </h2>\r\n                            <div className=\"mt-3\">\r\n                                <NavLink to={props.visit} className=\"btn-get-started\"> {props.btnname} </NavLink>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 order-1 order-lg-2 header-img\">\r\n                            <img src={props.imgsrc} className=\"img-fluid animation\" alt=\"Common img\"/>\r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Common;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Common from \"./Common\";\r\nimport web from \"./images/home_svg.png\"\r\nconst Home = () => {\r\n    return(\r\n        <>\r\n            <Common name=\"Grow your business\" imgsrc={web} visit=\"/about\" btnname=\"Get Started\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Common from \"./Common\";\r\nimport web from \"./images/img2.png\"\r\n\r\nconst About = () => {\r\n    return(\r\n        <>\r\n            <Common name=\"Welcome to about page\" imgsrc={web} visit=\"/contact\" btnname=\"Contact now\"/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Card = (props)=> {\r\n    return(\r\n        <>\r\n           <div className=\"col-md-4 col-10 mx-10\">\r\n                            <div className=\"card\" >\r\n                                <img src={props.imgsrc} className=\"card-img-top\" alt={props.imgsrc} />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\"> {props.title} </h5>\r\n                                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                    <NavLink to=\"#\" className=\"btn btn-primary\">Go somewhere</NavLink>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport web from \"./images/img1.png\"\r\nimport app from \"./images/img2.png\"\r\nconst Sdata = [\r\n    {\r\n    imgsrc: web,\r\n    title: \"web development\",\r\n    },\r\n    {\r\n    imgsrc: app,\r\n    title: \"app development\",\r\n    },\r\n    {\r\n    imgsrc: web,\r\n    title: \"android development\",\r\n    },\r\n    {\r\n    imgsrc: app,\r\n    title: \"game development\",\r\n    },\r\n    {\r\n    imgsrc: web,\r\n    title: \"web development\",\r\n    },\r\n    {\r\n    imgsrc: app,\r\n    title: \"ui development\",\r\n    },\r\n]\r\n\r\nexport default Sdata;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport Sdata from \"./Sdata\"\r\nconst Service = () => {\r\n    return(\r\n        <>\r\n            <div className=\"my-5\">\r\n                <h1 className=\"text-center\"> Our Services</h1>\r\n            </div>\r\n\r\n            <div className=\"container-fluid mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n                        <div className=\"row gy-4\">\r\n                            {\r\n                                Sdata.map((val, ind) => {\r\n                                    return <Card \r\n                                    key={ind}\r\n                                    imgsrc={val.imgsrc}\r\n                                    title={val.title}\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Service;","import React, { useState } from \"react\";\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    const [data, setData] = useState({\r\n        fullname: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        msg: \"\",\r\n    });\r\n\r\n    const InputEvent = (event) => {\r\n        const { name, value} = event.target;\r\n\r\n        setData((preVal) => {\r\n            return {\r\n                ...preVal,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n        alert(`My name is ${data.fullname} My phone number is ${data.phone} my email id is ${data.email} my message is ${data.msg}`)\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"my-5\">\r\n                <h1 className=\"text-center\"> Contact Us </h1>\r\n            </div>\r\n            <div className=\"container container_div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 col-10 mx-auto\">\r\n                    <form onSubmit={formSubmit}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Full name</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"fullname\" value={data.fullname} onChange={InputEvent} placeholder=\"Full name\" />\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Phone Number</label>\r\n                            <input type=\"number\" className=\"form-control\" name=\"phone\" value={data.phone} onChange={InputEvent} placeholder=\"mobile number\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" name=\"email\" value={data.email} onChange={InputEvent} placeholder=\"emailHelp\" />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\">message</label>\r\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" name=\"msg\" value={data.msg} onChange={InputEvent}></textarea>\r\n                        </div>\r\n                                                \r\n                        <button type=\"submit\" className=\"btn btn-outline-primary\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n\r\n        <div className=\"container-fluid nav_bg\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto\">\r\n                    \r\n                \r\n            <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n                <NavLink className=\"navbar-brand\" to=\"#\">Suraj Tiwari</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <NavLink activeClassName=\"menu_active\" className=\"nav-link active\" exact to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"menu_active\" className=\"nav-link\" to=\"about\">About </NavLink>\r\n                    </li>\r\n                   \r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"menu_active\" className=\"nav-link\" to=\"/service\">Services</NavLink>\r\n                    </li>\r\n                   \r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"menu_active\" className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                    </li>\r\n                    </ul>\r\n                    \r\n                </div>\r\n                </nav>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <footer className=\"bg-light text-center\">\r\n                <p> &copy; 2020 Suraj Tiwari. All Rights Reserved | Terms and Conditions</p>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport\"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle'\nimport './App.css';\nimport Home from './Home'\nimport About from './About'\nimport Service from './Service'\nimport Contact from './Contact'\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nconst App = () => {\n  return(\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/about\" component={About}/>\n        <Route exact path=\"/service\" component={Service}/>\n        <Route exact path=\"/contact\" component={Contact}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n      <Footer />\n    </>\n  )\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/img2.03a7e352.png\";"],"sourceRoot":""}